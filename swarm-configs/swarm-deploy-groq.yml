version: '3.9'

networks:
  unmute-net:
    external: true

volumes:
  traefik-cert:

services:
  traefik:
    image: traefik:v3.3.1
    command:
      - "--configFile=/etc/traefik/traefik-static.yml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /root/traefik-static.yml:/etc/traefik/traefik-static.yml:ro
      - /root/traefik-dynamic.yml:/etc/traefik/dynamic.yml:ro
      - /root/certs:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - unmute-net

  frontend:
    image: intellipedia/inti-frontend:v15.11.23
    environment:
      - NEXT_PUBLIC_IN_DOCKER=true
      - NEXT_PUBLIC_WS_URL=wss://inti.intellipedia.ai/v1/realtime
      - NEXT_PUBLIC_API_BASE=https://inti.intellipedia.ai/api
      - NEXT_PUBLIC_BACKEND_URL=https://inti.intellipedia.ai/api
    deploy:
      update_config:
        order: start-first
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=Host(`inti.intellipedia.ai`)"
        - "traefik.http.routers.frontend.entrypoints=websecure"
        - "traefik.http.routers.frontend.tls=true"
        - "traefik.http.services.frontend.loadbalancer.server.port=3000"
        - "traefik.http.routers.frontend.priority=50"
    networks:
      - unmute-net

  backend:
    image: intellipedia/inti-new-backend:v1.0.0
    env_file:
      - .env
    deploy:
      update_config:
        order: start-first
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backend.rule=Host(`inti.intellipedia.ai`) && PathPrefix(`/api`) && !PathPrefix(`/api/v1/`)"
        - "traefik.http.routers.backend.entrypoints=websecure"
        - "traefik.http.routers.backend.tls=true"
        - "traefik.http.routers.backend.priority=100"
        - "traefik.http.routers.backend.middlewares=backend-stripprefix"
        - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api"
        - "traefik.http.services.backend.loadbalancer.server.port=80"
    networks:
      - unmute-net

  # NOTE: unmute service removed - replaced by pipecat-backend for voice operations

  pipecat-backend:
    image: intellipedia/inti-pipecat-backend:dev.14
    env_file:
      - .env
    deploy:
      update_config:
        order: start-first
      labels:
        - "traefik.enable=true"
        # Direct WebSocket path for voice realtime
        - "traefik.http.routers.pipecat-realtime.rule=Host(`inti.intellipedia.ai`) && PathPrefix(`/v1/realtime`)"
        - "traefik.http.routers.pipecat-realtime.entrypoints=websecure"
        - "traefik.http.routers.pipecat-realtime.tls=true"
        - "traefik.http.routers.pipecat-realtime.priority=250"
        - "traefik.http.services.pipecat-backend.loadbalancer.server.port=8000"
        # Health endpoint for voice services
        - "traefik.http.routers.pipecat-health.rule=Host(`inti.intellipedia.ai`) && PathPrefix(`/api/v1/health`)"
        - "traefik.http.routers.pipecat-health.entrypoints=websecure"
        - "traefik.http.routers.pipecat-health.tls=true"
        - "traefik.http.routers.pipecat-health.priority=300"
        - "traefik.http.routers.pipecat-health.middlewares=pipecat-stripprefix"
        - "traefik.http.middlewares.pipecat-stripprefix.stripprefix.prefixes=/api"
        - "traefik.http.routers.pipecat-health.service=pipecat-backend"
    networks:
      - unmute-net

  unmute_stt:
    image: intellipedia/inti-stt-groq-bridge:v1.0.1-ipv4-fix
    env_file:
      - .env
    environment:
      - GROQ_STT_MODEL=whisper-large-v3-turbo
    deploy:
      update_config:
        order: start-first
      labels:
        - "traefik.enable=false"
    networks:
      - unmute-net

  unmute_tts:
    image: intellipedia/inti-tts-groq-bridge:v1.0.3-audio-quality-fix
    env_file:
      - .env
    deploy:
      update_config:
        order: start-first
      labels:
        - "traefik.enable=false"
    networks:
      - unmute-net

  unmute_llm:
    image: intellipedia/inti-llm-groq-proxy:v1.2-final-ipv4-fix
    env_file:
      - .env
    deploy:
      update_config:
        order: start-first
      labels:
        - "traefik.enable=false"
    networks:
      - unmute-net

  unmute_voice_cloning:
    image: nginx:alpine
    command: |
      sh -c "
      cat > /etc/nginx/nginx.conf << 'EOF'
      events { worker_connections 1024; }
      http {
        server {
          listen 8080;
          location /api/build_info {
            return 200 '{\"status\": \"ok\", \"service\": \"voice-cloning\"}';
            add_header Content-Type application/json;
          }
        }
      }
      EOF
      nginx -g 'daemon off;'
      "
    deploy:
      update_config:
        order: start-first
      labels:
        - "traefik.enable=false"
    networks:
      - unmute-net
